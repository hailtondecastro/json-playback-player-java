package org.jsonplayback.player.implemantation;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.Date;
import java.util.Locale;
import java.util.TimeZone;

import com.fasterxml.jackson.annotation.ObjectIdGenerator;
import com.fasterxml.jackson.annotation.ObjectIdResolver;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.BeanDescription;
import com.fasterxml.jackson.databind.BeanProperty;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.JsonSerializer;
import com.fasterxml.jackson.databind.SerializationConfig;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.introspect.Annotated;
import com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
import com.fasterxml.jackson.databind.introspect.ObjectIdInfo;
import com.fasterxml.jackson.databind.jsontype.TypeSerializer;
import com.fasterxml.jackson.databind.ser.SerializerFactory;
import com.fasterxml.jackson.databind.ser.impl.WritableObjectId;
import com.fasterxml.jackson.databind.util.Converter;

public class JsHbSerializerProvider extends SerializerProvider {

	private JsHbJsonSerializer jsonSerializerDelegate;
	private JsHbJsonGeneratorDelegate jsonGeneratorDelegate;
	
	SerializerProvider delegate;
	
	public JsHbSerializerProvider configJsonSerializerDelegate(JsHbJsonSerializer jsonSerializerDelegate) {
		this.jsonSerializerDelegate = jsonSerializerDelegate;
		return this;
	}

	public JsHbSerializerProvider configJsonGeneratorDelegate(JsHbJsonGeneratorDelegate jsonGeneratorDelegate) {
		this.jsonGeneratorDelegate = jsonGeneratorDelegate;
		return this;
	}		
	
	public JsHbSerializerProvider(SerializerProvider delegate) {
		super(delegate, delegate.getConfig(), null);
		this.delegate = delegate;		
	}

	@Override
	public void setDefaultKeySerializer(JsonSerializer<Object> ks) {
		// TODO Auto-generated method stub
		this.delegate.setDefaultKeySerializer(ks);
	}

	@Override
	public void setNullValueSerializer(JsonSerializer<Object> nvs) {
		// TODO Auto-generated method stub
		this.delegate.setNullValueSerializer(nvs);
	}

	@Override
	public void setNullKeySerializer(JsonSerializer<Object> nks) {
		// TODO Auto-generated method stub
		this.delegate.setNullKeySerializer(nks);
	}

	@Override
	public Locale getLocale() {
		// TODO Auto-generated method stub
		return this.delegate.getLocale();
	}

	@Override
	public TimeZone getTimeZone() {
		// TODO Auto-generated method stub
		return this.delegate.getTimeZone();
	}

	@Override
	public Object getAttribute(Object key) {
		// TODO Auto-generated method stub
		return this.delegate.getAttribute(key);
	}

	@Override
	public SerializerProvider setAttribute(Object key, Object value) {
		// TODO Auto-generated method stub
		return this.delegate.setAttribute(key, value);
	}

	@Override
	public WritableObjectId findObjectId(Object forPojo, ObjectIdGenerator<?> generatorType) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JsonSerializer<Object> findValueSerializer(Class<?> valueType, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findValueSerializer(valueType, property);
	}

	@Override
	public JsonSerializer<Object> findValueSerializer(JavaType valueType, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findValueSerializer(valueType, property);
	}

	@Override
	public JsonSerializer<Object> findValueSerializer(Class<?> valueType) throws JsonMappingException {
		// TODO Auto-generated method stub
		return new JsHbJsonSerializer(this.delegate.findValueSerializer(valueType)).configJsHbManager(jsHbManager));
	}

	@Override
	public JsonSerializer<Object> findValueSerializer(JavaType valueType) throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findValueSerializer(valueType);
	}

	@Override
	public JsonSerializer<Object> findPrimaryPropertySerializer(JavaType valueType, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findPrimaryPropertySerializer(valueType, property);
	}

	@Override
	public JsonSerializer<Object> findPrimaryPropertySerializer(Class<?> valueType, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findPrimaryPropertySerializer(valueType, property);
	}

	@Override
	public JsonSerializer<Object> findTypedValueSerializer(Class<?> valueType, boolean cache, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findTypedValueSerializer(valueType, cache, property);
	}

	@Override
	public JsonSerializer<Object> findTypedValueSerializer(JavaType valueType, boolean cache, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findTypedValueSerializer(valueType, cache, property);
	}

	@Override
	public TypeSerializer findTypeSerializer(JavaType javaType) throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findTypeSerializer(javaType);
	}

	@Override
	public JsonSerializer<Object> findKeySerializer(JavaType keyType, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findKeySerializer(keyType, property);
	}

	@Override
	public JsonSerializer<Object> findKeySerializer(Class<?> rawKeyType, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findKeySerializer(rawKeyType, property);
	}

	@Override
	public JsonSerializer<Object> getDefaultNullKeySerializer() {
		// TODO Auto-generated method stub
		return this.delegate.getDefaultNullKeySerializer();
	}

	@Override
	public JsonSerializer<Object> getDefaultNullValueSerializer() {
		// TODO Auto-generated method stub
		return this.delegate.getDefaultNullValueSerializer();
	}

	@Override
	public JsonSerializer<Object> findNullKeySerializer(JavaType serializationType, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findNullKeySerializer(serializationType, property);
	}

	@Override
	public JsonSerializer<Object> findNullValueSerializer(BeanProperty property) throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.findNullValueSerializer(property);
	}

	@Override
	public JsonSerializer<Object> getUnknownTypeSerializer(Class<?> unknownType) {
		// TODO Auto-generated method stub
		return this.delegate.getUnknownTypeSerializer(unknownType);
	}

	@Override
	public boolean isUnknownTypeSerializer(JsonSerializer<?> ser) {
		// TODO Auto-generated method stub
		return this.delegate.isUnknownTypeSerializer(ser);
	}

	@Override
	public JsonSerializer<Object> serializerInstance(Annotated annotated, Object serDef) throws JsonMappingException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public JsonSerializer<?> handlePrimaryContextualization(JsonSerializer<?> ser, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.handlePrimaryContextualization(ser, property);
	}

	@Override
	public JsonSerializer<?> handleSecondaryContextualization(JsonSerializer<?> ser, BeanProperty property)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.handleSecondaryContextualization(ser, property);
	}

	@Override
	public void defaultSerializeDateKey(long timestamp, JsonGenerator gen) throws IOException {
		// TODO Auto-generated method stub
		this.delegate.defaultSerializeDateKey(timestamp, gen);
	}

	@Override
	public void defaultSerializeDateKey(Date date, JsonGenerator gen) throws IOException {
		// TODO Auto-generated method stub
		this.delegate.defaultSerializeDateKey(date, gen);
	}

	@Override
	public JsonMappingException mappingException(String message, Object... args) {
		// TODO Auto-generated method stub
		return this.delegate.mappingException(message, args);
	}

	@Override
	public void reportMappingProblem(String message, Object... args) throws JsonMappingException {
		// TODO Auto-generated method stub
		this.delegate.reportMappingProblem(message, args);
	}

	@Override
	public void reportMappingProblem(Throwable t, String message, Object... args) throws JsonMappingException {
		// TODO Auto-generated method stub
		this.delegate.reportMappingProblem(t, message, args);
	}

	@Override
	public <T> T reportBadTypeDefinition(BeanDescription bean, String message, Object... args)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.reportBadTypeDefinition(bean, message, args);
	}

	@Override
	public <T> T reportBadPropertyDefinition(BeanDescription bean, BeanPropertyDefinition prop, String message,
			Object... args) throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.reportBadPropertyDefinition(bean, prop, message, args);
	}

	@Override
	public JsonGenerator getGenerator() {
		// TODO Auto-generated method stub
		return this.delegate.getGenerator();
	}


	@Override
	public JavaType constructType(Type type) {
		// TODO Auto-generated method stub
		return this.delegate.constructType(type);
	}

	@Override
	public JavaType constructSpecializedType(JavaType baseType, Class<?> subclass) {
		// TODO Auto-generated method stub
		return this.delegate.constructSpecializedType(baseType, subclass);
	}

	@Override
	public ObjectIdGenerator<?> objectIdGeneratorInstance(Annotated annotated, ObjectIdInfo objectIdInfo)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.objectIdGeneratorInstance(annotated, objectIdInfo);
	}

	@Override
	public ObjectIdResolver objectIdResolverInstance(Annotated annotated, ObjectIdInfo objectIdInfo) {
		// TODO Auto-generated method stub
		return this.delegate.objectIdResolverInstance(annotated, objectIdInfo);
	}

	@Override
	public Converter<Object, Object> converterInstance(Annotated annotated, Object converterDef)
			throws JsonMappingException {
		// TODO Auto-generated method stub
		return this.delegate.converterInstance(annotated, converterDef);
	}	
}
/*gerando conflito*/